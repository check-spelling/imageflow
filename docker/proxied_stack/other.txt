


  imageflow-nginx-proxy:
    image: pixelfordinner/nginx
    container_name: imageflow-nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./volumes/conf.d:/etc/nginx/conf.d"
      - "./volumes/vhost.d:/etc/nginx/vhost.d"
      - "./volumes/certs:/etc/nginx/certs:ro"
      - "/usr/share/nginx/html"
    networks:
      - proxy-tier
  imageflow-docker-gen:
    image: jwilder/docker-gen
    container_name: imageflow-docker_gen
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./data/templates:/etc/docker-gen/templates:ro"
    volumes_from:
      - imageflow-nginx-proxy
    entrypoint: /usr/local/bin/docker-gen -notify-sighup imageflow-nginx_proxy -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  imageflow-lets-encrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: imageflow-lets_encrypt
    restart: unless-stopped
    volumes_from:
      - imageflow-nginx-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=imageflow-docker_gen
      # - ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory
  imageflow-server:
    image: imazen/imageflow_server_unsecured

networks:
  proxy-tier:
    external:

name: nginx-proxy


    environment:
      - VIRTUAL_HOST=
lb:
  image: dockercloud/haproxy
  autorestart: always
  links:
    - web
  ports:
    - "80:3000"
  roles:
    - global
web:
  image: imazen/imageflow_server
  autorestart: always
  links:
    - redis
  environment:
    - NAME=Friendly Users
  deployment_strategy: high_availability
  target_num_containers: 1 #4
  working_dir: /home/imageflow/imageflow
  entrypoint: /home/imageflow/imageflow/imageflow_server
  user: imageflow
redis:
  image: redis
  autorestart: always
  environment:
    - REDIS_PASS=password
